// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#ifndef PROTOBUF_Login_2eproto__INCLUDED
#define PROTOBUF_Login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace Login {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Login_2eproto();
void protobuf_AssignDesc_Login_2eproto();
void protobuf_ShutdownFile_Login_2eproto();

class IMLoginReq;
class IMLoginRes;
class IMLogoutRsp;
class IMMsgServReq;
class IMMsgServRsp;

// ===================================================================

class IMMsgServReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Login.IMMsgServReq) */ {
 public:
  IMMsgServReq();
  virtual ~IMMsgServReq();

  IMMsgServReq(const IMMsgServReq& from);

  inline IMMsgServReq& operator=(const IMMsgServReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMMsgServReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgServReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgServReq* other);

  // implements Message ----------------------------------------------

  inline IMMsgServReq* New() const { return New(NULL); }

  IMMsgServReq* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgServReq& from);
  void MergeFrom(const IMMsgServReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgServReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Login.IMMsgServReq)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static IMMsgServReq* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgServRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Login.IMMsgServRsp) */ {
 public:
  IMMsgServRsp();
  virtual ~IMMsgServRsp();

  IMMsgServRsp(const IMMsgServRsp& from);

  inline IMMsgServRsp& operator=(const IMMsgServRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMMsgServRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgServRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgServRsp* other);

  // implements Message ----------------------------------------------

  inline IMMsgServRsp* New() const { return New(NULL); }

  IMMsgServRsp* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgServRsp& from);
  void MergeFrom(const IMMsgServRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgServRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BaseDefine.ResultType result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::BaseDefine::ResultType result_code() const;
  void set_result_code(::BaseDefine::ResultType value);

  // optional string prior_ip = 2;
  void clear_prior_ip();
  static const int kPriorIpFieldNumber = 2;
  const ::std::string& prior_ip() const;
  void set_prior_ip(const ::std::string& value);
  void set_prior_ip(const char* value);
  void set_prior_ip(const char* value, size_t size);
  ::std::string* mutable_prior_ip();
  ::std::string* release_prior_ip();
  void set_allocated_prior_ip(::std::string* prior_ip);

  // optional string backip_ip = 3;
  void clear_backip_ip();
  static const int kBackipIpFieldNumber = 3;
  const ::std::string& backip_ip() const;
  void set_backip_ip(const ::std::string& value);
  void set_backip_ip(const char* value);
  void set_backip_ip(const char* value, size_t size);
  ::std::string* mutable_backip_ip();
  ::std::string* release_backip_ip();
  void set_allocated_backip_ip(::std::string* backip_ip);

  // optional uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Login.IMMsgServRsp)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr prior_ip_;
  int result_code_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::internal::ArenaStringPtr backip_ip_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static IMMsgServRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMLoginReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Login.IMLoginReq) */ {
 public:
  IMLoginReq();
  virtual ~IMLoginReq();

  IMLoginReq(const IMLoginReq& from);

  inline IMLoginReq& operator=(const IMLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLoginReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMLoginReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMLoginReq* other);

  // implements Message ----------------------------------------------

  inline IMLoginReq* New() const { return New(NULL); }

  IMLoginReq* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMLoginReq& from);
  void MergeFrom(const IMLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional .BaseDefine.UserStatType online_status = 3;
  void clear_online_status();
  static const int kOnlineStatusFieldNumber = 3;
  ::BaseDefine::UserStatType online_status() const;
  void set_online_status(::BaseDefine::UserStatType value);

  // optional .BaseDefine.ClientType client_type = 4;
  void clear_client_type();
  static const int kClientTypeFieldNumber = 4;
  ::BaseDefine::ClientType client_type() const;
  void set_client_type(::BaseDefine::ClientType value);

  // optional string client_version = 5;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 5;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // @@protoc_insertion_point(class_scope:Login.IMLoginReq)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  int online_status_;
  int client_type_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static IMLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class IMLoginRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Login.IMLoginRes) */ {
 public:
  IMLoginRes();
  virtual ~IMLoginRes();

  IMLoginRes(const IMLoginRes& from);

  inline IMLoginRes& operator=(const IMLoginRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLoginRes& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMLoginRes* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMLoginRes* other);

  // implements Message ----------------------------------------------

  inline IMLoginRes* New() const { return New(NULL); }

  IMLoginRes* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMLoginRes& from);
  void MergeFrom(const IMLoginRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_time = 1;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  ::google::protobuf::uint32 server_time() const;
  void set_server_time(::google::protobuf::uint32 value);

  // optional .BaseDefine.ResultType result_code = 2;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  ::BaseDefine::ResultType result_code() const;
  void set_result_code(::BaseDefine::ResultType value);

  // optional string result_string = 3;
  void clear_result_string();
  static const int kResultStringFieldNumber = 3;
  const ::std::string& result_string() const;
  void set_result_string(const ::std::string& value);
  void set_result_string(const char* value);
  void set_result_string(const char* value, size_t size);
  ::std::string* mutable_result_string();
  ::std::string* release_result_string();
  void set_allocated_result_string(::std::string* result_string);

  // optional .BaseDefine.UserStatType online_status = 4;
  void clear_online_status();
  static const int kOnlineStatusFieldNumber = 4;
  ::BaseDefine::UserStatType online_status() const;
  void set_online_status(::BaseDefine::UserStatType value);

  // optional .BaseDefine.UserInfo user_info = 5;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 5;
  const ::BaseDefine::UserInfo& user_info() const;
  ::BaseDefine::UserInfo* mutable_user_info();
  ::BaseDefine::UserInfo* release_user_info();
  void set_allocated_user_info(::BaseDefine::UserInfo* user_info);

  // @@protoc_insertion_point(class_scope:Login.IMLoginRes)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 server_time_;
  int result_code_;
  ::google::protobuf::internal::ArenaStringPtr result_string_;
  ::BaseDefine::UserInfo* user_info_;
  int online_status_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static IMLoginRes* default_instance_;
};
// -------------------------------------------------------------------

class IMLogoutRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Login.IMLogoutRsp) */ {
 public:
  IMLogoutRsp();
  virtual ~IMLogoutRsp();

  IMLogoutRsp(const IMLogoutRsp& from);

  inline IMLogoutRsp& operator=(const IMLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLogoutRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMLogoutRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMLogoutRsp* other);

  // implements Message ----------------------------------------------

  inline IMLogoutRsp* New() const { return New(NULL); }

  IMLogoutRsp* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMLogoutRsp& from);
  void MergeFrom(const IMLogoutRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLogoutRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Login.IMLogoutRsp)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint32 result_code_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_Login_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_Login_2eproto();
  #endif
  friend void protobuf_AssignDesc_Login_2eproto();
  friend void protobuf_ShutdownFile_Login_2eproto();

  void InitAsDefaultInstance();
  static IMLogoutRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IMMsgServReq

// -------------------------------------------------------------------

// IMMsgServRsp

// optional .BaseDefine.ResultType result_code = 1;
inline void IMMsgServRsp::clear_result_code() {
  result_code_ = 0;
}
inline ::BaseDefine::ResultType IMMsgServRsp::result_code() const {
  // @@protoc_insertion_point(field_get:Login.IMMsgServRsp.result_code)
  return static_cast< ::BaseDefine::ResultType >(result_code_);
}
inline void IMMsgServRsp::set_result_code(::BaseDefine::ResultType value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Login.IMMsgServRsp.result_code)
}

// optional string prior_ip = 2;
inline void IMMsgServRsp::clear_prior_ip() {
  prior_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServRsp::prior_ip() const {
  // @@protoc_insertion_point(field_get:Login.IMMsgServRsp.prior_ip)
  return prior_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_prior_ip(const ::std::string& value) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.IMMsgServRsp.prior_ip)
}
inline void IMMsgServRsp::set_prior_ip(const char* value) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.IMMsgServRsp.prior_ip)
}
inline void IMMsgServRsp::set_prior_ip(const char* value, size_t size) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.IMMsgServRsp.prior_ip)
}
inline ::std::string* IMMsgServRsp::mutable_prior_ip() {
  
  // @@protoc_insertion_point(field_mutable:Login.IMMsgServRsp.prior_ip)
  return prior_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServRsp::release_prior_ip() {
  // @@protoc_insertion_point(field_release:Login.IMMsgServRsp.prior_ip)
  
  return prior_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_allocated_prior_ip(::std::string* prior_ip) {
  if (prior_ip != NULL) {
    
  } else {
    
  }
  prior_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prior_ip);
  // @@protoc_insertion_point(field_set_allocated:Login.IMMsgServRsp.prior_ip)
}

// optional string backip_ip = 3;
inline void IMMsgServRsp::clear_backip_ip() {
  backip_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServRsp::backip_ip() const {
  // @@protoc_insertion_point(field_get:Login.IMMsgServRsp.backip_ip)
  return backip_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_backip_ip(const ::std::string& value) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.IMMsgServRsp.backip_ip)
}
inline void IMMsgServRsp::set_backip_ip(const char* value) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.IMMsgServRsp.backip_ip)
}
inline void IMMsgServRsp::set_backip_ip(const char* value, size_t size) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.IMMsgServRsp.backip_ip)
}
inline ::std::string* IMMsgServRsp::mutable_backip_ip() {
  
  // @@protoc_insertion_point(field_mutable:Login.IMMsgServRsp.backip_ip)
  return backip_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServRsp::release_backip_ip() {
  // @@protoc_insertion_point(field_release:Login.IMMsgServRsp.backip_ip)
  
  return backip_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_allocated_backip_ip(::std::string* backip_ip) {
  if (backip_ip != NULL) {
    
  } else {
    
  }
  backip_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), backip_ip);
  // @@protoc_insertion_point(field_set_allocated:Login.IMMsgServRsp.backip_ip)
}

// optional uint32 port = 4;
inline void IMMsgServRsp::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgServRsp::port() const {
  // @@protoc_insertion_point(field_get:Login.IMMsgServRsp.port)
  return port_;
}
inline void IMMsgServRsp::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:Login.IMMsgServRsp.port)
}

// -------------------------------------------------------------------

// IMLoginReq

// optional string user_name = 1;
inline void IMLoginReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginReq::user_name() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginReq.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.IMLoginReq.user_name)
}
inline void IMLoginReq::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.IMLoginReq.user_name)
}
inline void IMLoginReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.IMLoginReq.user_name)
}
inline ::std::string* IMLoginReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:Login.IMLoginReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginReq::release_user_name() {
  // @@protoc_insertion_point(field_release:Login.IMLoginReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:Login.IMLoginReq.user_name)
}

// optional string password = 2;
inline void IMLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginReq::password() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.IMLoginReq.password)
}
inline void IMLoginReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.IMLoginReq.password)
}
inline void IMLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.IMLoginReq.password)
}
inline ::std::string* IMLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Login.IMLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:Login.IMLoginReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Login.IMLoginReq.password)
}

// optional .BaseDefine.UserStatType online_status = 3;
inline void IMLoginReq::clear_online_status() {
  online_status_ = 0;
}
inline ::BaseDefine::UserStatType IMLoginReq::online_status() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginReq.online_status)
  return static_cast< ::BaseDefine::UserStatType >(online_status_);
}
inline void IMLoginReq::set_online_status(::BaseDefine::UserStatType value) {
  
  online_status_ = value;
  // @@protoc_insertion_point(field_set:Login.IMLoginReq.online_status)
}

// optional .BaseDefine.ClientType client_type = 4;
inline void IMLoginReq::clear_client_type() {
  client_type_ = 0;
}
inline ::BaseDefine::ClientType IMLoginReq::client_type() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginReq.client_type)
  return static_cast< ::BaseDefine::ClientType >(client_type_);
}
inline void IMLoginReq::set_client_type(::BaseDefine::ClientType value) {
  
  client_type_ = value;
  // @@protoc_insertion_point(field_set:Login.IMLoginReq.client_type)
}

// optional string client_version = 5;
inline void IMLoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginReq.client_version)
  return client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.IMLoginReq.client_version)
}
inline void IMLoginReq::set_client_version(const char* value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.IMLoginReq.client_version)
}
inline void IMLoginReq::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.IMLoginReq.client_version)
}
inline ::std::string* IMLoginReq::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:Login.IMLoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:Login.IMLoginReq.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:Login.IMLoginReq.client_version)
}

// -------------------------------------------------------------------

// IMLoginRes

// optional uint32 server_time = 1;
inline void IMLoginRes::clear_server_time() {
  server_time_ = 0u;
}
inline ::google::protobuf::uint32 IMLoginRes::server_time() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginRes.server_time)
  return server_time_;
}
inline void IMLoginRes::set_server_time(::google::protobuf::uint32 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:Login.IMLoginRes.server_time)
}

// optional .BaseDefine.ResultType result_code = 2;
inline void IMLoginRes::clear_result_code() {
  result_code_ = 0;
}
inline ::BaseDefine::ResultType IMLoginRes::result_code() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginRes.result_code)
  return static_cast< ::BaseDefine::ResultType >(result_code_);
}
inline void IMLoginRes::set_result_code(::BaseDefine::ResultType value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Login.IMLoginRes.result_code)
}

// optional string result_string = 3;
inline void IMLoginRes::clear_result_string() {
  result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginRes::result_string() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginRes.result_string)
  return result_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginRes::set_result_string(const ::std::string& value) {
  
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.IMLoginRes.result_string)
}
inline void IMLoginRes::set_result_string(const char* value) {
  
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.IMLoginRes.result_string)
}
inline void IMLoginRes::set_result_string(const char* value, size_t size) {
  
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.IMLoginRes.result_string)
}
inline ::std::string* IMLoginRes::mutable_result_string() {
  
  // @@protoc_insertion_point(field_mutable:Login.IMLoginRes.result_string)
  return result_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginRes::release_result_string() {
  // @@protoc_insertion_point(field_release:Login.IMLoginRes.result_string)
  
  return result_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginRes::set_allocated_result_string(::std::string* result_string) {
  if (result_string != NULL) {
    
  } else {
    
  }
  result_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_string);
  // @@protoc_insertion_point(field_set_allocated:Login.IMLoginRes.result_string)
}

// optional .BaseDefine.UserStatType online_status = 4;
inline void IMLoginRes::clear_online_status() {
  online_status_ = 0;
}
inline ::BaseDefine::UserStatType IMLoginRes::online_status() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginRes.online_status)
  return static_cast< ::BaseDefine::UserStatType >(online_status_);
}
inline void IMLoginRes::set_online_status(::BaseDefine::UserStatType value) {
  
  online_status_ = value;
  // @@protoc_insertion_point(field_set:Login.IMLoginRes.online_status)
}

// optional .BaseDefine.UserInfo user_info = 5;
inline bool IMLoginRes::has_user_info() const {
  return !_is_default_instance_ && user_info_ != NULL;
}
inline void IMLoginRes::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
inline const ::BaseDefine::UserInfo& IMLoginRes::user_info() const {
  // @@protoc_insertion_point(field_get:Login.IMLoginRes.user_info)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return user_info_ != NULL ? *user_info_ : *default_instance().user_info_;
#else
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
#endif
}
inline ::BaseDefine::UserInfo* IMLoginRes::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::BaseDefine::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:Login.IMLoginRes.user_info)
  return user_info_;
}
inline ::BaseDefine::UserInfo* IMLoginRes::release_user_info() {
  // @@protoc_insertion_point(field_release:Login.IMLoginRes.user_info)
  
  ::BaseDefine::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void IMLoginRes::set_allocated_user_info(::BaseDefine::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Login.IMLoginRes.user_info)
}

// -------------------------------------------------------------------

// IMLogoutRsp

// optional uint32 result_code = 1;
inline void IMLogoutRsp::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 IMLogoutRsp::result_code() const {
  // @@protoc_insertion_point(field_get:Login.IMLogoutRsp.result_code)
  return result_code_;
}
inline void IMLogoutRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Login.IMLogoutRsp.result_code)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Login

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Login_2eproto__INCLUDED
